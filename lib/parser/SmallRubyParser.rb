#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.7.1
# from Racc grammar file "".
#

require 'racc/parser.rb'

#
module SR
  class Parser < Racc::Parser

module_eval(<<'...end SmallRubyParser.y/module_eval...', 'SmallRubyParser.y', 76)
    def parse(tokens)
        @tokens = tokens
        do_parse
    end

    def next_token
        @tokens.shift
    end
...end SmallRubyParser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     2,    11,     2,     7,     8,     9,    36,    51,    52,    10,
     2,    11,    37,     7,     8,     9,    19,     2,    11,    10,
     7,     8,     9,    19,     2,    11,    10,     7,     8,     9,
    19,     2,    11,    10,     7,     8,     9,    28,     2,    11,
    10,     7,     8,     9,    19,     2,    41,    10,     7,     8,
     9,    19,    40,    45,    10,     2,    11,    37,     7,     8,
     9,    19,     2,    11,    10,     7,     8,     9,    19,    47,
     3,    10,     2,    11,     4,     7,     8,     9,    28,     2,
    11,    10,     7,     8,     9,    19,     2,    11,    10,     7,
     8,     9,    19,    20,    38,    10,    42,    53,    57,    61,
    32,    21,    21,    21,    21,    21,    21,    21,    32,   -30,
    24,    21,    56,    45,     5,    22,    23,    24,    26,    21,
    21,    37,    59,    21,    37 ]

racc_action_check = [
    26,    26,     0,    26,    26,    26,    26,    39,    39,    26,
     4,     4,    26,     4,     4,     4,     4,    19,    19,     4,
    19,    19,    19,    19,    22,    22,    19,    22,    22,    22,
    22,    23,    23,    22,    23,    23,    23,    23,    24,    24,
    23,    24,    24,    24,    24,    28,    28,    24,    28,    28,
    28,    28,    28,    35,    28,    30,    30,    35,    30,    30,
    30,    30,    36,    36,    30,    36,    36,    36,    36,    36,
     1,    36,    37,    37,     2,    37,    37,    37,    37,    45,
    45,    37,    45,    45,    45,    45,    50,    50,    45,    50,
    50,    50,    50,     6,    27,    50,    29,    43,    49,    58,
    25,     6,    27,    25,    29,    43,    49,    58,    46,    41,
    41,    46,    48,    48,     3,     7,    10,    11,    21,    31,
    33,    47,    52,    54,    56 ]

racc_action_pointer = [
     0,    70,    71,   114,     8,   nil,    89,   112,   nil,   nil,
   113,   104,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,
   nil,   115,    22,    29,    36,    91,    -2,    90,    43,    92,
    53,   107,   nil,   108,   nil,    43,    60,    70,   nil,    -2,
   nil,    97,   nil,    93,   nil,    77,    99,   107,   103,    94,
    84,   nil,   119,   nil,   111,   nil,   110,   nil,    95,   nil,
   nil,   nil ]

racc_action_default = [
   -34,   -34,   -34,   -34,   -33,    62,   -34,   -34,    -3,    -4,
   -34,   -30,   -24,   -25,   -26,   -27,   -28,   -29,   -31,   -33,
    -1,   -34,   -33,   -33,   -33,   -34,   -11,   -34,   -33,   -34,
   -33,   -21,   -32,   -19,   -12,   -13,   -33,   -33,    -2,   -34,
    -6,    -7,    -9,   -34,   -14,   -33,   -19,   -15,   -34,   -34,
   -33,    -5,   -34,   -10,   -20,   -17,   -16,   -22,   -34,    -8,
   -18,   -23 ]

racc_goto_table = [
     6,    30,    35,     1,    34,    39,   nil,   nil,   nil,   nil,
   nil,   nil,    48,    44,   nil,    50,   nil,   nil,    27,    29,
    31,   nil,    33,   nil,   nil,    55,    43,   nil,   nil,   nil,
   nil,   nil,    46,    49,    60,   nil,   nil,   nil,   nil,   nil,
   nil,    54,   nil,   nil,   nil,   nil,    58 ]

racc_goto_check = [
     2,     6,    11,     1,    10,     7,   nil,   nil,   nil,   nil,
   nil,   nil,    11,    10,   nil,     6,   nil,   nil,     2,     2,
     2,   nil,     2,   nil,   nil,    10,     2,   nil,   nil,   nil,
   nil,   nil,     2,     2,    10,   nil,   nil,   nil,   nil,   nil,
   nil,     2,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     3,    -4,   nil,   nil,   nil,   -22,   -23,   nil,   nil,
   -22,   -24,   nil ]

racc_goto_default = [
   nil,    12,    25,    13,    17,    16,   nil,   nil,    14,    15,
   nil,   nil,    18 ]

racc_reduce_table = [
  0, 0, :racc_error,
  4, 16, :_reduce_1,
  4, 18, :_reduce_2,
  1, 19, :_reduce_3,
  1, 20, :_reduce_4,
  3, 21, :_reduce_5,
  2, 21, :_reduce_6,
  1, 22, :_reduce_7,
  3, 22, :_reduce_8,
  4, 23, :_reduce_9,
  5, 23, :_reduce_10,
  3, 24, :_reduce_11,
  4, 24, :_reduce_12,
  4, 24, :_reduce_13,
  5, 24, :_reduce_14,
  5, 24, :_reduce_15,
  6, 24, :_reduce_16,
  6, 24, :_reduce_17,
  7, 24, :_reduce_18,
  1, 26, :_reduce_19,
  3, 26, :_reduce_20,
  3, 27, :_reduce_21,
  3, 25, :_reduce_22,
  4, 25, :_reduce_23,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  3, 17, :_reduce_32,
  0, 17, :_reduce_33 ]

racc_reduce_n = 34

racc_shift_n = 62

racc_token_table = {
  false => 0,
  :error => 1,
  "module" => 2,
  :CONST => 3,
  "end" => 4,
  "class" => 5,
  :STRING => 6,
  :NUMBER => 7,
  "(" => 8,
  ")" => 9,
  "," => 10,
  "def" => 11,
  "." => 12,
  "=" => 13,
  "do" => 14 }

racc_nt_base = 15

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"module\"",
  "CONST",
  "\"end\"",
  "\"class\"",
  "STRING",
  "NUMBER",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"def\"",
  "\".\"",
  "\"=\"",
  "\"do\"",
  "$start",
  "module",
  "exp",
  "class",
  "string",
  "number",
  "args",
  "argsList",
  "def",
  "send",
  "block",
  "expList",
  "assign" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'SmallRubyParser.y', 3)
  def _reduce_1(val, _values, result)
     result = [:module,val[1],val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 5)
  def _reduce_2(val, _values, result)
     result = [:class,val[1],val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 7)
  def _reduce_3(val, _values, result)
    result = [:string,val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 10)
  def _reduce_4(val, _values, result)
    result = [:number,val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 13)
  def _reduce_5(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 15)
  def _reduce_6(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 18)
  def _reduce_7(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 20)
  def _reduce_8(val, _values, result)
    result.push(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 23)
  def _reduce_9(val, _values, result)
    result = [:def,val[1],[],val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 25)
  def _reduce_10(val, _values, result)
    result = [:def,val[1],val[2],val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 28)
  def _reduce_11(val, _values, result)
     result = [:send,val[0],val[2],[]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 30)
  def _reduce_12(val, _values, result)
     result = [:send,val[0],val[2],[],val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 32)
  def _reduce_13(val, _values, result)
     result = [:send,val[0],val[2],val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 34)
  def _reduce_14(val, _values, result)
     result = [:send,val[0],val[2],val[3],val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 36)
  def _reduce_15(val, _values, result)
     result = [:send,val[0],val[2],[]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 38)
  def _reduce_16(val, _values, result)
     result = [:send,val[0],val[2],val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 40)
  def _reduce_17(val, _values, result)
     result = [:send,val[0],val[2],[],val[5]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 42)
  def _reduce_18(val, _values, result)
     result = [:send,val[0],val[2],val[4],val[6]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 45)
  def _reduce_19(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 47)
  def _reduce_20(val, _values, result)
    result.push(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 50)
  def _reduce_21(val, _values, result)
    result = [:assign,val[0],val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 53)
  def _reduce_22(val, _values, result)
    result = [:block,[],val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 55)
  def _reduce_23(val, _values, result)
    result = [:block,val[1],val[2]]
    result
  end
.,.,

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

module_eval(<<'.,.,', 'SmallRubyParser.y', 68)
  def _reduce_32(val, _values, result)
     result=val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 70)
  def _reduce_33(val, _values, result)
    result = []
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module SR

#
