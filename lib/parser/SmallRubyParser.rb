#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.7.1
# from Racc grammar file "".
#

require 'racc/parser.rb'

#
module SR
  class Parser < Racc::Parser

module_eval(<<'...end SmallRubyParser.y/module_eval...', 'SmallRubyParser.y', 61)
    def parse(tokens)
        @tokens = tokens
        do_parse
    end

    def next_token
        @tokens.shift
    end
...end SmallRubyParser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     2,    17,     2,     7,     8,     9,    18,     2,    17,    10,
     7,     8,     9,    18,     2,    17,    10,     7,     8,     9,
    18,     2,    17,    10,     7,     8,     9,    26,     2,    34,
    10,     7,     8,     9,    18,    33,     3,    10,     2,    17,
     4,     7,     8,     9,    18,     2,    17,    10,     7,     8,
     9,    18,    38,     5,    10,     2,    17,    19,     7,     8,
     9,    18,    31,    35,    10,    20,    42,    40,    41,    29,
    20,    20,    20,    21,    20,    43,    44,    22,    24,    30,
   -23,    20,    45,    20 ]

racc_action_check = [
     4,     4,     0,     4,     4,     4,     4,    18,    18,     4,
    18,    18,    18,    18,    21,    21,    18,    21,    21,    21,
    21,    22,    22,    21,    22,    22,    22,    22,    26,    26,
    22,    26,    26,    26,    26,    26,     1,    26,    28,    28,
     2,    28,    28,    28,    28,    30,    30,    28,    30,    30,
    30,    30,    30,     3,    30,    44,    44,     6,    44,    44,
    44,    44,    25,    27,    44,     6,    36,    32,    32,    23,
    25,    27,    23,     7,    36,    39,    39,    10,    20,    24,
    34,    37,    41,    46 ]

racc_action_pointer = [
     0,    36,    37,    53,    -2,   nil,    53,    70,   nil,   nil,
    74,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,
    75,    12,    19,    60,    71,    58,    26,    59,    36,   nil,
    43,   nil,    58,   nil,    68,   nil,    62,    69,   nil,    66,
   nil,    79,   nil,   nil,    53,   nil,    71 ]

racc_action_default = [
   -26,   -26,   -26,   -26,   -25,    47,   -26,   -26,    -3,    -4,
   -26,   -17,   -18,   -19,   -20,   -21,   -22,   -23,   -25,    -1,
   -26,   -25,   -25,   -26,   -11,   -26,   -25,   -26,   -25,   -24,
   -25,    -2,   -26,    -6,    -7,    -9,   -26,   -14,   -12,   -26,
    -5,   -26,   -10,   -13,   -25,    -8,   -15 ]

racc_goto_table = [
     6,     1,    28,    32,    39,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,    27,   nil,
   nil,   nil,   nil,   nil,    36,   nil,    37,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    46 ]

racc_goto_check = [
     2,     1,     6,     7,    10,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,     2,   nil,
   nil,   nil,   nil,   nil,     2,   nil,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2 ]

racc_goto_pointer = [
   nil,     1,    -4,   nil,   nil,   nil,   -20,   -23,   nil,   nil,
   -26,   nil ]

racc_goto_default = [
   nil,    11,    23,    12,    16,    15,   nil,   nil,    13,    14,
   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  4, 15, :_reduce_1,
  4, 17, :_reduce_2,
  1, 18, :_reduce_3,
  1, 19, :_reduce_4,
  3, 20, :_reduce_5,
  2, 20, :_reduce_6,
  1, 21, :_reduce_7,
  3, 21, :_reduce_8,
  4, 22, :_reduce_9,
  5, 22, :_reduce_10,
  3, 23, :_reduce_11,
  5, 23, :_reduce_12,
  6, 23, :_reduce_13,
  1, 24, :_reduce_14,
  3, 24, :_reduce_15,
  3, 25, :_reduce_16,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  3, 16, :_reduce_24,
  0, 16, :_reduce_25 ]

racc_reduce_n = 26

racc_shift_n = 47

racc_token_table = {
  false => 0,
  :error => 1,
  "module" => 2,
  :CONST => 3,
  "end" => 4,
  "class" => 5,
  :STRING => 6,
  :NUMBER => 7,
  "(" => 8,
  ")" => 9,
  "," => 10,
  "def" => 11,
  "." => 12,
  "=" => 13 }

racc_nt_base = 14

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"module\"",
  "CONST",
  "\"end\"",
  "\"class\"",
  "STRING",
  "NUMBER",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"def\"",
  "\".\"",
  "\"=\"",
  "$start",
  "module",
  "exp",
  "class",
  "string",
  "number",
  "args",
  "argsList",
  "def",
  "send",
  "expList",
  "assign" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'SmallRubyParser.y', 3)
  def _reduce_1(val, _values, result)
     result = [:module,val[1],val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 5)
  def _reduce_2(val, _values, result)
     result = [:class,val[1],val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 7)
  def _reduce_3(val, _values, result)
    result = [:string,val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 10)
  def _reduce_4(val, _values, result)
    result = [:number,val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 13)
  def _reduce_5(val, _values, result)
    result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 15)
  def _reduce_6(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 18)
  def _reduce_7(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 20)
  def _reduce_8(val, _values, result)
    result.push(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 23)
  def _reduce_9(val, _values, result)
    result = [:def,val[1],[],val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 25)
  def _reduce_10(val, _values, result)
    result = [:def,val[1],val[2],val[3]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 28)
  def _reduce_11(val, _values, result)
     result = [:send,val[0],val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 30)
  def _reduce_12(val, _values, result)
     result = [:send,val[0],val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 32)
  def _reduce_13(val, _values, result)
     result = [:send,val[0],val[2],val[4]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 35)
  def _reduce_14(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 37)
  def _reduce_15(val, _values, result)
    result.push(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 40)
  def _reduce_16(val, _values, result)
    result = [:assign,val[0],val[2]]
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'SmallRubyParser.y', 53)
  def _reduce_24(val, _values, result)
     result=[:brackets,val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'SmallRubyParser.y', 55)
  def _reduce_25(val, _values, result)
    result = []
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module SR

#
